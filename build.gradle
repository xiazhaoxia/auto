/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds/
 */

apply plugin: 'java'
apply plugin: 'groovy'


def server="slc12eex"
def buildVersion="23088"
def tempSrc="\\\\slc15dze\\debug-env-template\\$buildVersion-debug-server-template"
def jreSrc = "\\\\slcnas529.us.oracle.com\\engfs02\\tools\\jdk1.8\\win32\\jre8"

def buildLocation="C:\\$buildVersion\\siebel"
def javacontainerTarget="$buildLocation\\javacontainer"
def fileStartDebug="C:\\23088_bat"

def debugTools="mydist"



task copyJRE(type: Copy) {
    from jreSrc
    into file("$buildLocation\\jre")
}

task unzipJavaContainer(type: Copy,dependsOn:"copyJRE") {
    from zipTree("$buildLocation\\classes\\javacontainer.zip")
    into "dest"
}

def javacontainer="dest\\javacontainer"
def javaContainerSrc="dest\\javacontainer\\javacontainer0"
def siebTarget="dest\\javacontainer\\javacontainer-sieb"
def gtwyTarget="dest\\javacontainer\\javacontainer-gtwy"
def swsmTarget="dest\\javacontainer\\javacontainer-swsm"

task copy1(type:Copy,dependsOn:"unzipJavaContainer"){
	from "$javaContainerSrc"
	into "$siebTarget"
}

task copy2(type:Copy,dependsOn:copy1){
	from "$javaContainerSrc"
	into "$gtwyTarget"
}
task copy3(type:Copy,dependsOn:copy2){
	from "$javaContainerSrc"
	into "$swsmTarget"
}

task copyCert1(type:Copy,dependsOn:copy3){
	from "$tempSrc\\siebelcerts"
	into "$siebTarget\\siebelcerts"	
}

task copyCert2(type:Copy,dependsOn:copyCert1){
	from "$tempSrc\\siebelcerts"
	into "$gtwyTarget\\siebelcerts" 
}

task copyCert3(type:Copy,dependsOn:copyCert2){
	from "$tempSrc\\siebelcerts"
	into "$swsmTarget\\siebelcerts" 	
}

//copy server xml
task copyServerXmlSieb(type:Copy,dependsOn:copyCert3){
	from "$tempSrc\\sieb\\server.xml"
	into "$siebTarget\\conf"
}


task copyServerXmlgtwy(type:Copy,dependsOn:copyServerXmlSieb){
	from "$tempSrc\\gtwy\\server.xml"
	into "$gtwyTarget\\conf"
}

task copyServerXmlswsm(type:Copy,dependsOn:copyServerXmlgtwy){
	from "$tempSrc\\swsm\\server.xml"
	into "$swsmTarget\\conf"
}

task copySiebwar(type:Copy,dependsOn:copyServerXmlswsm,description:"copy Siebel war & properties to javacontainer-sieb"){
	from("$tempSrc\\sieb") {
		exclude "server.xml"
	}	
	into "$siebTarget\\webapps"
}

task copygtwywar(type:Copy,dependsOn:copySiebwar,description:"copy Siebel war to javacontainer-gtwy"){
	from("$tempSrc\\gtwy") {
		exclude "server.xml"
	}	
	into "$gtwyTarget\\webapps"
}

task copyswsmwar(type:Copy,dependsOn:copygtwywar,description:"copy Siebel war to javacontainer-swsm"){
	from("$tempSrc\\swsm") {
		exclude "server.xml"
	}	
	into "$swsmTarget\\webapps"
}





//读取文件并替换字符串

def fileReader(path, oldStr, newStr) {
	def readerString = "";
	new File(path).withReader('UTF-8') { reader ->
		reader.eachLine {
			if (it.find(oldStr)) {
				it = it.replace(oldStr, newStr)
			}
			readerString <<= it
			readerString << '\n'
		}
		return readerString
	}
}

def fileReader(path, oldStr, newStr,key) {
	def readerString = "";
	new File(path).withReader('UTF-8') { reader ->
		reader.eachLine {
			if (it.find(oldStr) && it.find(key)) {
				it = it.replace(oldStr, newStr)
			}
			readerString <<= it
			readerString << '\n'
		}
		return readerString
	}
}




//写文件

def fileWrite(path, stringBuffer) {
	new File(path).withWriter('UTF-8') {
		within ->
		within.append(stringBuffer)
	}
}

def modifyfile(path,oldStr,newStr,filename){
	//backup the file
	backfile(path,path,filename)

	//replace the server name 
	def strBuffer = fileReader("$path\\$filename", oldStr, newStr);
	fileWrite("$path\\$filename", strBuffer);
}

def modifyfileBySpec(path,oldStr,newStr,filename,key){
	//backup the file
	backfile(path,path,filename)

	//replace the server name 
	def strBuffer = fileReader("$path\\$filename", oldStr, newStr,key);
	fileWrite("$path\\$filename", strBuffer);
}

def backfile(src,target,name){

	if(file("$target\\${name}.gbak").exists()){

	}else{
		copy{
			from "$src\\$name"
			into "$target"
			rename{
				String filename->
				filename+".gbak"
			}
		}	
	}	
	
}

task replaceGatePro(dependsOn:copyswsmwar) {
	def strBuffer = fileReader("$gtwyTarget\\webapps\\gateway.properties", "slc00xyz", "$server");
	fileWrite("$gtwyTarget\\webapps\\gateway.properties", strBuffer);
}

task copyJavaContainer(dependsOn:replaceGatePro) {	
	//if target folder is readOnly, you should create target folder before copying the file
	file("$javacontainerTarget").mkdirs()
	copy{
		from "$javacontainer"
		into "$javacontainerTarget"
	}	
}


//call the startdebug.bat written by xiongjian
task run(type: Exec,dependsOn:"copyJavaContainer"){
    workingDir = file("$fileStartDebug")
    commandLine = ['cmd', '/c', 'startdebug.bat']

    doLast{
    
    	 if(execResult.exitValue == 0) {
            println "Success"
        } else {
            println "Fail"
        }
    }
    
}

task runperl(type:Exec,dependsOn:"run"){
	workingDir = file("z:\\siebel\\bin")

	println "start executing the first time"
	commandLine = ['cmd', '/c', 'perl dbgsrvr.pl']

	println "start executing the second time"
	commandLine = ['cmd', '/c', 'perl dbgsrvr.pl']


}



task modifyfiles{
	modifyfile("z:\\siebel\\bin\\w32ud","SLC11XRN","$server","eapps.cfg")
	modifyfile("Z:\\siebel\\bin\\w32ud\\enu","SLC11XRN","$server","uagent.cfg")
	modifyfile("z:\\siebel\\bin\\w32ud","localhost","$server:4330","nsprime1.bat")
	modifyfileBySpec("z:\\siebel\\bin","localhost","$server:4330","srvrdefs.dat","Param: DSConnectString")	
}



task start(type:Exec){
	workingDir=file("z:\\siebel\\bin\\w32ud")
	commandLine = ['cmd', '/c', 'set JAVA_HOME=Z:\\Siebel\\jre']
	commandLine = ['cmd', '/c', 'start m:\\siebel\\src\\3rdparty\\zookeeper\\server\\bin\\zkServer.cmd']
	ignoreExitValue true
	standardOutput = new ByteArrayOutputStream()
    ext.output = {    	
        return standardOutput.toString()
    }
    doLast{
    	println  "***************"
    	println ext.output
    	println "*****************"
    }


}

task startServer(type:Exec){
	workingDir=file("z:\\siebel\\javacontainer\\javacontainer-sieb\\bin")

	file("$workingDir\\startup.bat") << "\nexit 0";
	commandLine = ['cmd', '/c', 'startup.bat']
	doLast{
    
    	 if(execResult.exitValue == 0) {
            println "******************************star sieb server************************************"
        } else {
            println "Fail"
        }
    }

	



	
}
task startgtwyserver(type:Exec){
	workingDir=file("z:\\siebel\\javacontainer\\javacontainer-gtwy\\bin")
	file("$workingDir\\startup.bat") << "\nexit 0";
	commandLine = ['cmd', '/c', 'startup.bat']
	doLast{
    
    	 if(execResult.exitValue == 0) {
            println "**************************start gtwy server******************************************"
        } else {
            println "Fail"
        }
    }

}


task startswsmserver(type:Exec){
	workingDir=file("z:\\siebel\\javacontainer\\javacontainer-swsm\\bin")
	file("$workingDir\\startup.bat") << "\nexit 0";
	commandLine = ['cmd', '/c', 'startup.bat']

	doLast{
    
    	 if(execResult.exitValue == 0) {
            println "*****************************start swsm server**************************************"
        } else {
            println "Fail"
        }
    }

}


task copyWorkAround(type:Copy){
	if("$buildVersion"=="23088"){
		println "copy workaround for $buildVersion"
		
		from file("\\\\slc12ecr.us.oracle.com\\ting\\shared\\dll_23088")
		into "z:\\siebel\\bin\\w32ud"

	}
}

task init(type:Exec,dependsOn:"copyWorkAround"){

	workingDir=file("z:\\siebel\\bin\\w32ud")
	commandLine = ['cmd', '/c', 'nsprime1.bat']

}


